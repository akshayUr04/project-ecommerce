// Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/addaddress/": {
            "post": {
                "description": "Add address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "User can add address",
                "operationId": "add-address",
                "parameters": [
                    {
                        "description": "User address",
                        "name": "user_address",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/helperStruct.Address"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/addcoupontocart/{coupon_id}": {
            "patch": {
                "description": "User can add coupon to the cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "User can add a coupon to the cart",
                "operationId": "applay-coupon-to-cart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "coupon_id",
                        "name": "coupon_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/addtocart/{product_item_id}": {
            "post": {
                "description": "User can add product item to the cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "User can add a product item to the cart",
                "operationId": "add-to-cart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product_item_id",
                        "name": "product_item_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/addtofav/{productId}": {
            "post": {
                "description": "User can add product item to favourites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Favourites"
                ],
                "summary": "User can add product item to favourites",
                "operationId": "add-to-favourites",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the product item to be added to wishlist",
                        "name": "productId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/adminlogin": {
            "post": {
                "description": "Admin login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Admin Login",
                "operationId": "admin-login",
                "parameters": [
                    {
                        "description": "Admin login credentials",
                        "name": "admin_credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/helperStruct.LoginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/adminlogout": {
            "post": {
                "description": "Logs out a logged-in admin from the E-commerce web api admin panel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Admin Logout",
                "operationId": "admin-logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/admin/blockuser/{id}": {
            "patch": {
                "description": "Admins can block users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Admin can bolock users",
                "operationId": "block-users",
                "parameters": [
                    {
                        "description": "User bolocking details",
                        "name": "blocking_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/helperStruct.BlockData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/category/add": {
            "post": {
                "description": "Admin can create new category from admin panel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Category"
                ],
                "summary": "Create new product category",
                "operationId": "create-category",
                "parameters": [
                    {
                        "description": "New category name",
                        "name": "category_name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/helperStruct.Category"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/category/find/{id}": {
            "get": {
                "description": "Users and admins can fetch details of a specific category using id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Category"
                ],
                "summary": "Fetch details of a specific category using category id",
                "operationId": "find-category-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/category/listall": {
            "get": {
                "description": "Admin, users and unregistered users can see all the available categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Category"
                ],
                "summary": "View all available categories",
                "operationId": "view-all-categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/category/update/{id}": {
            "patch": {
                "description": "Admin can update category details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Category"
                ],
                "summary": "Admin can update category details",
                "operationId": "update-category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the Category to be updated",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "category info",
                        "name": "category_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/helperStruct.Category"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/createadmin": {
            "post": {
                "description": "Super admin can create a new admin from admin panel.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Create a new admin from admin panel",
                "operationId": "create-admin",
                "parameters": [
                    {
                        "description": "New Admin details",
                        "name": "admin_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/helperStruct.CreateAdmin"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/createcoupon/": {
            "post": {
                "description": "Admin can create new coupons",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Coupon"
                ],
                "summary": "Admin can create new coupon",
                "operationId": "create-coupon",
                "parameters": [
                    {
                        "description": "details of new coupon to be created",
                        "name": "new_coupon_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/helperStruct.Coupons"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/deletecoupon/{couponId}": {
            "delete": {
                "description": "Admin can delete existing coupon",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Coupon"
                ],
                "summary": "Admin can delete existing coupon",
                "operationId": "delete-coupon",
                "parameters": [
                    {
                        "type": "string",
                        "description": "details of coupon to be updated",
                        "name": "coupon_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/downloadsales/": {
            "get": {
                "description": "Admin can download sales report in .csv format",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Admin can download sales report",
                "operationId": "download-sales-report",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/findall": {
            "get": {
                "description": "Admin can find all registered users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Admin can find all registered users",
                "operationId": "find-all-users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to retrieve per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search query string",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter criteria for the users",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sorting criteria for the users",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sorting in descending order",
                        "name": "sort_desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/finduser/{id}": {
            "get": {
                "description": "Admins can find users with id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Admin can find a user",
                "operationId": "find-users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the user to be found",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/getdashboard": {
            "get": {
                "description": "Admin can access dashboard and view details regarding orders, products, etc.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Admin Dashboard",
                "operationId": "admin-dashboard",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/product-item/add/": {
            "post": {
                "description": "This endpoint allows an admin user to create a new product item.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Item"
                ],
                "summary": "Creates a new product item",
                "operationId": "create-product-item",
                "parameters": [
                    {
                        "description": "Product item details",
                        "name": "product_item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/helperStruct.ProductItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully added new product item",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Failed to add new product item",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/product-item/delete/{id}": {
            "delete": {
                "description": "Deletes a product item from the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Item"
                ],
                "summary": "Deletes a product item from the system",
                "operationId": "delete-product-item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the product item to be deleted",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/product-item/show/{id}": {
            "get": {
                "description": "Retrieve a product item by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Item"
                ],
                "summary": "Retrieve a product item by ID",
                "operationId": "find-product-item-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/product-item/update/{id}": {
            "patch": {
                "description": "Update an existing product item with new information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Item"
                ],
                "summary": "Update a product item",
                "operationId": "update-product-item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the productitem to be updated",
                        "name": "Id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product item information to update",
                        "name": "product_item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/helperStruct.ProductItem"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/product/add": {
            "post": {
                "description": "Admins can create new product listings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Admin can create new product listings",
                "operationId": "create-product",
                "parameters": [
                    {
                        "description": "new product details",
                        "name": "new_product_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/helperStruct.Product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/product/delete/{id}": {
            "delete": {
                "description": "This endpoint allows an admin  to delete a product by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Deletes a product by ID",
                "operationId": "delete-product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID to delete",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted product",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid product ID",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/product/update/{id}": {
            "put": {
                "description": "This endpoint allows an admin user to update a product's details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Admin can update product details",
                "operationId": "update-product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the product to be updated",
                        "name": "Id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated product details",
                        "name": "updated_product_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/helperStruct.Product"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successfully updated product",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Unable to update product",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/salesreport/": {
            "get": {
                "description": "Admin can view the sales report",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Admin can view sales report",
                "operationId": "view-sales-report",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/unblockuser/{id}": {
            "patch": {
                "description": "Admins can block users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Admin can unbolock a blocked user",
                "operationId": "unblock-users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the user to be blocked",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/updatecoupen/{couponId}": {
            "patch": {
                "description": "Admin can update existing coupon",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Coupon"
                ],
                "summary": "Admin can update existing coupon",
                "operationId": "update-coupon",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coupon ID",
                        "name": "couponId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "details of coupon to be updated",
                        "name": "coupon_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/helperStruct.Coupons"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/viewcoupon/{couponId}": {
            "get": {
                "description": "Admins and users can see coupon with id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Coupon"
                ],
                "summary": "Admins and users can see coupon with coupon id",
                "operationId": "view-coupon-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "coupon_id",
                        "name": "coupon_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/admin/viewcoupons/": {
            "get": {
                "description": "Admins and users can see all available coupons",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Coupon"
                ],
                "summary": "Admins and users can see all available coupons",
                "operationId": "view-coupons",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/editprofile": {
            "patch": {
                "description": "Users can update their profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "User can update their profile",
                "operationId": "update-user-profile",
                "parameters": [
                    {
                        "description": "User profile",
                        "name": "user_profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/helperStruct.UserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/listallorder": {
            "get": {
                "description": "Endpoint for getting all orders associated with a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Retrieves all orders of currently logged in user",
                "operationId": "view-all-orders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/listallproduct/": {
            "get": {
                "description": "Admins and users can ses all available products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Admins and users can see all available products",
                "operationId": "user-view-all-products",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to retrieve per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search query string",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter criteria for the product items",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sorting criteria for the product items",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/listcart": {
            "get": {
                "description": "User can view cart and cart items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "User can view cart items and total",
                "operationId": "view-cart",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "description": "Logs out a logged-in user from the E-commerce web api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "User Logout",
                "operationId": "user-logout",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/orderall/{paymentId}": {
            "post": {
                "description": "This endpoint allows a user to purchase all items in their cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Buy all items from the user's cart",
                "operationId": "buyAll",
                "parameters": [
                    {
                        "type": "string",
                        "description": "payment_id",
                        "name": "payment_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/orders/cancel/{orderId}": {
            "patch": {
                "description": "Endpoint for cancelling an order associated with a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Cancels a specific order for the currently logged in user",
                "operationId": "cancel-order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the order to be cancelled",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/payments/razorpay/{orderId}": {
            "get": {
                "description": "Users can make payment via Razorpay after placing orders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Users can make payment",
                "operationId": "create-razorpay-payment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Orderid",
                        "name": "orderId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/payments/success/": {
            "get": {
                "description": "Handler for automatically updating payment details upon successful payment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Handling successful payment",
                "operationId": "payment-success",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment details",
                        "name": "c",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated payment details",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Failed to update payment details",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/product-item/uploadimage/{id}": {
            "post": {
                "description": "Upload one or more images for a given product ID",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Product Item"
                ],
                "summary": "Handles the uploading of images for a given product ID",
                "operationId": "upload-image",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Product image(s)",
                        "name": "images",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/removecoupon": {
            "patch": {
                "description": "User can add coupon to the cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "User can remove the coupon that added to the cart",
                "operationId": "remove-coupon-to-cart",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/removefromcart/{product_item_id}": {
            "delete": {
                "description": "User can remove product from cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Remove a product from the cart",
                "operationId": "remove-from-cart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product_item_id",
                        "name": "product_item_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/removefromfav/{productId}": {
            "delete": {
                "description": "User can remove product item from favourites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Favourites"
                ],
                "summary": "User can remove product item from favourites",
                "operationId": "remove-from-favourites",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the product item to be added to wishlist",
                        "name": "productId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/return/{orderId}": {
            "patch": {
                "description": "Endpoint for Returning an order associated with a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Return a specific order for the currently logged in user",
                "operationId": "return-order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the order to be cancelled",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/sendotp": {
            "post": {
                "description": "Send OTP to use's mobile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Otp"
                ],
                "summary": "Send OTP to user's mobile",
                "operationId": "send-otp",
                "parameters": [
                    {
                        "description": "User mobile number",
                        "name": "user_mobile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/helperStruct.OTPData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Create a new user with the specified details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "UserSignUp",
                "operationId": "user-signup",
                "parameters": [
                    {
                        "description": "User details",
                        "name": "user_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/helperStruct.UserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/updateaddress/{addressId}": {
            "patch": {
                "description": "Update address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "User can update existing address",
                "operationId": "update-address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "addressId",
                        "name": "addressId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User address",
                        "name": "user_address",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/helperStruct.Address"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/updatepassword": {
            "patch": {
                "description": "Users can update their Password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "User can update their Password",
                "operationId": "update-user-Password",
                "parameters": [
                    {
                        "description": "User password",
                        "name": "user_profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/helperStruct.UpdatePassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/userdisaplayallproductItems/": {
            "get": {
                "description": "view all product items for user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Item"
                ],
                "summary": "Handler function to view all product items",
                "operationId": "user-view-all-product-items",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to retrieve per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search query string",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter criteria for the product items",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sorting criteria for the product items",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sorting in descending order",
                        "name": "sort_desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/userlogin": {
            "post": {
                "description": "Login as a user to access the ecommerce site",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "User Login",
                "operationId": "user-login-email",
                "parameters": [
                    {
                        "description": "User details",
                        "name": "user_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/helperStruct.LoginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/verifyotp": {
            "post": {
                "description": "Validate the  OTP sent to use's mobile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Otp"
                ],
                "summary": "Validate the OTP to user's mobile",
                "operationId": "validate-otp",
                "parameters": [
                    {
                        "description": "OTP sent to user's mobile number",
                        "name": "otp",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/helperStruct.VerifyOtp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/viewfav/": {
            "get": {
                "description": "User view product items in favourites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Favourites"
                ],
                "summary": "User can view items in favourites",
                "operationId": "view-favourites",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/vieworder/{orderId}": {
            "get": {
                "description": "This function handles requests for retrieving the details of a specific order identified by its order ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Retrieves order details for a given order ID, if authorized.",
                "operationId": "view-order-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched order details",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Failed to fetch order details",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/viewprfile": {
            "get": {
                "description": "Users can visit their profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "User can view their profile",
                "operationId": "user-profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "helperStruct.Address": {
            "type": "object",
            "required": [
                "city",
                "district",
                "house_number",
                "landmark",
                "pincode",
                "street"
            ],
            "properties": {
                "city": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "house_number": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isdefault": {
                    "type": "boolean"
                },
                "landmark": {
                    "type": "string"
                },
                "pincode": {
                    "type": "integer"
                },
                "street": {
                    "type": "string"
                }
            }
        },
        "helperStruct.BlockData": {
            "type": "object",
            "required": [
                "reason",
                "userid"
            ],
            "properties": {
                "reason": {
                    "type": "string"
                },
                "userid": {
                    "type": "integer"
                }
            }
        },
        "helperStruct.Category": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "helperStruct.Coupons": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "discountmaximumamount": {
                    "type": "number"
                },
                "discountpercent": {
                    "type": "number"
                },
                "expirationdate": {
                    "type": "string"
                },
                "minimumpurchaseamount": {
                    "type": "number"
                }
            }
        },
        "helperStruct.CreateAdmin": {
            "type": "object",
            "required": [
                "email",
                "isSuper",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "isSuper": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "helperStruct.LoginReq": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "helperStruct.OTPData": {
            "type": "object",
            "required": [
                "phoneNumber"
            ],
            "properties": {
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "helperStruct.Product": {
            "type": "object",
            "required": [
                "brand",
                "categoryid",
                "description",
                "name"
            ],
            "properties": {
                "brand": {
                    "type": "string"
                },
                "categoryid": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "helperStruct.ProductItem": {
            "type": "object",
            "properties": {
                "battery": {
                    "type": "integer"
                },
                "camera": {
                    "type": "integer"
                },
                "colour": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "productid": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                },
                "ram": {
                    "type": "integer"
                },
                "screensize": {
                    "type": "number"
                },
                "sku": {
                    "type": "string"
                },
                "storage": {
                    "type": "integer"
                }
            }
        },
        "helperStruct.UpdatePassword": {
            "type": "object",
            "properties": {
                "newpassword": {
                    "type": "string"
                },
                "oldpassword": {
                    "type": "string"
                }
            }
        },
        "helperStruct.UserReq": {
            "type": "object",
            "required": [
                "email",
                "mobile",
                "name"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "mobile": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "helperStruct.VerifyOtp": {
            "type": "object",
            "required": [
                "code",
                "user"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/helperStruct.OTPData"
                }
            }
        },
        "response.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {},
                "message": {
                    "type": "string"
                },
                "stastuscode": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
