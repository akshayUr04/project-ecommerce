// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/akshayur04/project-ecommerce/pkg/api"
	"github.com/akshayur04/project-ecommerce/pkg/api/handler"
	"github.com/akshayur04/project-ecommerce/pkg/config"
	"github.com/akshayur04/project-ecommerce/pkg/db"
	"github.com/akshayur04/project-ecommerce/pkg/repository"
	"github.com/akshayur04/project-ecommerce/pkg/usecase"
)

// Injectors from wire.go:

func InitializeAPI(cfg config.Config) (*http.ServerHTTP, error) {
	gormDB, err := db.ConnectDatabase(cfg)
	if err != nil {
		return nil, err
	}
	userRepository := repository.NewUserRepository(gormDB)
	userUseCase := usecase.NewUserUseCase(userRepository)
	cartRepository := repository.NewCartRepository(gormDB)
	cartUsecase := usecase.NewCartUsecase(cartRepository)
	findIdUseCase := usecase.NewFindIdUseCase()
	userHandler := handler.NewUserHandler(userUseCase, cartUsecase, findIdUseCase)
	otpUseCase := usecase.NewOtpUseCase(cfg)
	otpHandler := handler.NewOtpHandler(cfg, otpUseCase, userUseCase)
	adminRepository := repository.NewAdminRepository(gormDB)
	adminUsecase := usecase.NewAdminUsecase(adminRepository)
	adminHandler := handler.NewAdminHandler(adminUsecase, findIdUseCase)
	productRepository := repository.NewProductRepository(gormDB)
	productUsecase := usecase.NewProductUsecase(productRepository)
	productHandler := handler.NewProductHandler(productUsecase)
	cartHandler := handler.NewCartHandler(cartUsecase, findIdUseCase)
	orderRepository := repository.NewOrderRepository(gormDB)
	orderUseCase := usecase.NewOrderUseCase(orderRepository)
	orderHandler := handler.NewOrderHandler(orderUseCase, findIdUseCase)
	paymentRepository := repository.NewPaymentRepository(gormDB)
	paymentUseCase := usecase.NewPaymentuseCase(paymentRepository, orderRepository)
	paymentHandler := handler.NewPaymentHandler(findIdUseCase, paymentUseCase)
	couponRepository := repository.NewCouponRepository(gormDB)
	couponUsecase := usecase.NewCouponUsecase(couponRepository)
	couponHandler := handler.NewCouponHandler(couponUsecase)
	serverHTTP := http.NewServerHTTP(userHandler, otpHandler, adminHandler, productHandler, cartHandler, orderHandler, paymentHandler, couponHandler)
	return serverHTTP, nil
}
